<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[NMAP使用]]></title>
    <url>%2F2018%2F12%2F06%2FNMAP%E4%BD%BF%E7%94%A8%2F</url>
    <content type="text"><![CDATA[本文是学习nmap的时候做的nmap的参数使用方法 一、主机发现NMAP TCP/IP协议栈指纹 测试 描述 T1 发送TCP数据包（flag=SYN）到开放端口 T2 发送一个空的TCP数据包到开放的TCP端口 T3 发送TCP数据包（flag=SYN，URG，PSH，FIN）到开放的TCP端口 T4 发送TCP数据包（flag=ACk）到开放的TCP端口 T5 发送TCP数据包（flag=SYN）到开放的TCP端口 T6 发送TCP数据包（flag=ACK）到开放的TCP端口 T7 发送TCP数据包（flag=URG，PSH，FIN） nmap –A 192.168.1.1 —-全面扫描（综合扫描）是一种完整扫描目标信息的扫描方式 Ping扫描—-只进行ping扫描，显示出在线主机Ping扫描的优点就不会返回太多的信息 -sP选项可以启动ping扫描，该选项可以轻易地获取目标信息而不被轻易地发现 默认情况下，NMAP会发送一个icmp回声请求和一个tcp报文到目标端口 选项 解释 -sP Ping扫描 -P0 无ping扫描 -PS TCP SYN ping扫描 -PA TCP ACK ping 扫描 -PU UDP ping 扫描 -PE;-PP;-PM ICMP ping Types 扫描 -PR ARP ping扫描 -n 禁止dns反向解析 -R 反向解析域名 –system-dns 使用域名系统解析器 -sL 列表扫描 -6 扫描ipv6地址 –traceroute 路由跟踪 -PY SCTP INIT PING扫描 无ping扫描通通常用于防火墙禁止ping的情况下，它能够确定正在运行的机器。默认情况下nmap支队正在运行的主机进行高强度的探测，用-P0禁止主机发现会使nmap对每一个只指定的咪表ip地址进行缩要求的扫描，这样可以穿透防火墙 nmap –P0【协议1，协议2】 【目标】 默认使用协议为1,2,4 如果想知道这些协议是如何判定主机是否存活的可以使--packet-trace选项 Nmap支持的协议和编号如下 TCP：6 ICMP：1 IGMP：2 UDP：17 TCP SYN PING扫描-PS选项发送一个设置了SYN标志位的空TCP请求。默认为80端口，可以通过改变nmap.h文件中的DEFAULT-TCP-PROBE-PORT值进行配置，还可以指定端口列表（如-PS22,23,80,115,3306） 通常情况下nmap默认ping扫描是使用TCP ACK和CIMP echo请求对泌尿进行是否存活的响应，当防火墙阻止这些请求时，可以用TCP SYN Ping扫描 TCP SYN Ping扫描-PA选项与TCP SYN Ping扫描非常类似，唯一的区别是标志位是SYN，这种方式可以探测阻止SYN包或ICMP echo请求的主机 UDP Ping扫描-PU选项是发送一个空的UDP报文待制定端口，默认为40125.课通过nmap.h文件中DEFAULT-UDP-PROBE-PORT进行修改,,如果目标主机响应则返回一个ICMP端口不可达，如果目标主机不是存活状态则返回各种ICMP错误信息 ICMP Ping Types扫描-PE;-PP;-PMNmap发送一个ICMP type8（回声请求）报文到目标IP地址，从运行的主机得到一个type0（回声响应）报文。-PE选项简单的来说是通过向目标发送ICMP echo数据包来探测目标主机是否在线，正因为许多主机的防火墙会禁止这些报文，所以仅仅ICMP扫描对于互联网上的目标通常是不够的。但对于系统管理员见识一个内部网络，他们可能是实际有效的途径。使用-PE选项打开回声请求功能。-PP选项是ICMP时间戳ping扫描，虽然大多数的防火墙配置不允许ICMP echo请求，但由于配置不当可能恢复ICMP echo时间戳请求，所以可以使用ICMP时间戳来确定目标主机是否存活。-PM选项可以进行ICMP地址掩码ping扫描。这种扫描方式会试图使用备选的ICMP等级ping指定主机，通常有不错的穿透防火墙的效果 ARP Ping扫描-PR，功能是：主机将ARP请求广播打网络上的所有主机，并接受返回消息，确定目标IP地址的物理地址，同事间IP地址和硬件地址存入本机ARP缓存中，下棋请求时直接查询ARP缓存。在内网使用ARP Ping扫描是最有效的。 默认情况下闹发现目标主机就是在他所在的局域网上，会进行ARP扫描。即使指定了不同的ping类型，nmap也会对任何相同局域网上的主机使用ARP。如果不想使用ARP扫描，可以指定—send-ip。 SCTP INIT ping扫描-PY ＳＣＴＰ(stream control transmission protocol,流量控制协议) 是IETF在2000年定义的一个传输层协议。SCTP可以看做是TCP协议的改进。SCTP ping扫描通过项目表发送INIT包，根据目标主机 的响应潘墩目标主机是否存活。 二、探索网络 选项 解释 -T 时序选项 -p-F 端口扫描顺序（常用扫描方式） -sS TCP SYN扫描 -sT TCP链接扫描 -sU UDP扫描 -sN；-sF；-sX 隐蔽扫描 -sA TCP ACK扫描 -sW TCP窗口扫描 -sM TCP maimon扫描 –scanflags 自定义TCP扫描 -sI 空闲扫描 -sO ＩＰ协议扫描 -b FTP bounce扫描 时序选项-T0(偏执的)：非常慢的扫描，用于IDS逃避 -T1（鬼祟的）：缓慢的扫描，用于IDS逃避 -T2（文雅的）：降低速度以降低对带宽的消耗，此原乡一般不常用 -T3（普通的）：默认，根据目标反应自动调整时间 -T4（野蛮的）：快速扫描，常用扫描方式，需要在很好的网络环境下进行扫描，请求可能会淹没目标 -T5（疯狂的）：急速扫描，这种扫描方式以牺牲准确度来提升扫描速度 常用扫描方式-p加端口 例如： nmap –p 445 192.168.126.1 nmap –p 445-1000 192.168.126.1 如果既想扫描TCP端口又想扫描UDP端口，可以在端口号前加上“T:”或“U:”。 如果既想扫描UDP端口又想扫描TCP端口，必须制定-sU以及至少一个TCP扫描类型（如-sS，-sT或-sT）。如果没有给定协议限定符，端口号会被加到所有协议列表 nmap –sS –p T:111,U:445 192.168.123.123 -F选项会快速扫描端口，但并不是所有端口都扫描，只会扫描有限的端口，在nmap中nmap-services包含了默认扫描的端口，也可以用—datadir选项指定自己的nmap-services文件 -r 改选项不会对端口进行随机顺序扫描，默认情况下，nmap是随机顺序扫描端口的 --top-ports选项Nmap对端口开放率的调查结果保存在nmap-services中，这里罗列的是开放率最高的1000个TCP端口 例如： nmap –top-ports 100 192.168.123.123 --top-ratio选项与--top-prost相似，这个是nmap官方调查端口开放的频率 TCP SYN扫描-sS扫描方式比较常用，平均一秒可以扫描上千个端口。扫描方式比较隐蔽，很难被防火墙或管理员发现，因为他不进行TCP链接，被称为半开放式扫描。目标主机端口是关闭的情况下，nmap向目标主机发送一个SYN包请求链接，如果收到RST包则表明无法链接，即目标主机端口关闭。如果端口开放，目标主机收到SYN包后会响应一个SYN/ACK包，当nmap收到目标主机的响应后，向目标主机发送一个RST代替ACK包，链接结束，3次握手并没有完成 TCP链接扫描-sT选项用于SYN扫描不能使用的时候，他是TCP链接扫描，会完成3次握手 UDP扫描-sU选项可以进行UDP扫描。速度慢，但很多安全审核人员会忽略这些端口。UDP扫描会发送空的UDP报文到目的端口，UDP偷没有任何数据 隐蔽扫描-sN；-sF；-sX -sN是null扫描，是通过发送飞铲贵的TCP通信数据包对计算机进行探测，很多情况下null扫描与Xmas扫描敲好相反，null扫描不会编辑任何数据包，若目标主机的响应端口是关闭的，会响应一个RST数据包，若目标端口是开放的则不会响应任何信息 -sF是FIN扫描，当我们使用TCP SYN扫描是可能会被目标主机防火墙发现，会组织SYN数据包，这是我们使用TCP FIN扫描方式会有更好的穿透效果，TCP FIN扫描不会完成TCP握手TCP FIN扫描是向目标端口发送一个FIN包，如果收到目标响应的RST包，则说明目标端口是开放的，反之则是关闭的 -sX是Xmas扫描，数据包的FIN、PSH和USG标记位置打开，即标志为1，根据RFC 793规定如果目标主机端口开放则会响应一个RST标志包 TCP ACK扫描-sA选项启用TCP ACK扫描，其有一个非常致命的缺点，他不能确定端口是否是开放的还是被过滤的 ACK扫描探测报文只设置ACK标志位（除非使用-scanflags）。当扫描未被过滤的系统是，open和closed端口都会返回RST报文。当nmap把他们标记为unfiltered，意思是ACK报文不能到达，但至于他们是open或者是closed无法确定。不想用的端口或者发送特定的ICMP错误消息的端口都会被标记为filtered。 与TCP SYN类似，向目标主机一个端口发送一个只有ACK标志的TCP数据，如果目标主机响应的端口是开启状态，则会返回一个TCP RST数据包 TCP窗口扫描-sW启用窗口扫描，即widows扫描，原理与ACK扫描方式几乎一模一样，通过检查返回的额RSY报文的TCP窗口域判断目标端口是否开放 有时，开放端口用是整数表示窗口大小，关闭端口的窗口大小为0，使用，当收到RST包时，根据TCP窗口的值是正数还是0来判断目标端口是开放的还是关闭的。 TCP Maimon扫描-sM这项技术和Null、FIN及Xmas扫描完全一样除了探测报文是ＦＩＮ／ＡＣＫ。 自定义TCP扫描–scanflags选项可以使一个数字标记值，如9（PSH和FIN）也可以用URG、ACK、PSH、RST、SYN、FIN的任何组合，顺序不重要，中间不要空格例如： nmap –sT –scanflags SYNURG 192.168.12.123 空闲扫描-sI 允许进行端口完全欺骗扫描。可以使攻击者能够不适用自己的IP向目标主机发送数据包，他可以利用不活跃的僵尸主机反弹给攻击者一个旁通信道，从而进行端口扫描 例如： nmap –sI www.0day.co:80 192.168.123.12这里是利用的僵尸主机为www.0day.co的主机对192.168.123.12进行空闲扫描，如果有IDS，ＩＤＳ会把www.0day.co当做什么者 注意：选择的端口不洗不能被自己的nmap主机或目标主机过滤掉并且该端口是开放的。 IP协议扫描-sO该选项会确定目标端口 的嗅一类型，者并不是一中严格的端口扫描方式，因为他并不是扫描TCP、UDP端口号，而是IP协议号。IP协议扫描可以帮助用户确定目标主机那些事支持IP协议的，例如TCP、ICMP、IGMP。虽然他遍历的事IP协议号并不是TCP或UDP端口，但仍可以使用-p选项选择需要扫描的协议号。他不是在UDP报文的端口域上循环，而是在IP协议域的8位上循环，发送空的IP报文头 FTP Bounce扫描-b他允许用户连接到一台FTP服务器，然后要求文件送到一台第三方服务器，这种扫描方式已经很少被支持了，但不失为一种躲避防火墙的行办法。 三、指纹识别与探测 选项 解释 -sV 版本探测 –allprots 全端口版本探测 –version-intensity 设置扫描强度 –version-light 轻量级扫描 –version-all 重量级扫描 –version-trace 获取详尽版本信息 -s RPC扫描 -O 启用操作系统探测 –osscan-limit 对指定目标进行操作系统探测 –osscan-guss;–fuzzy 推测系统识别 四、伺机而动 选项 解释 –min-hostgroup 调整并行扫描组大小 –min-parallelism–max-parallelism 调整探测报文的并行度 –min-rtt-timeout–max-rtt-timeout–inital-rtt-timeout 调整探测报文超时 –host-timeout 泛起低速目标主机 –scan-delay–max-scan-delay 调整探测报文的时间间隔 --min-hostgroup ; --max-hostgroup (调整并行扫描组的大小) Nmap具有并行扫描多主机端口或版本的能力,Nmap将多个目标IP地址空间分成组,然后在同一时间对一个组进行扫描.通常,大的组更有效.缺点是只有当整个组扫描结束后才会提供主机的扫描结果.如果组的大小定义为50,则只有当前50个主机扫描结束后才能得到报告(详细模式中的补充信息除外). 默认方式下,Nmap采取折衷的方法.开始扫描时的组较小,最小为5,这样便于尽快产生结果；随后增长组的大小,最大为1024.确切的大小依赖于所给定的选项.为保证效率,针对UDP或少量端口的TCP扫描,Nmap使用大的组. --max-hostgroup选项用于说明使用最大的组,Nmap不会超出这个大小.–min-hostgroup选项说明最小的组,Nmap会保持组大于这个值.如果在指定的接口上没有足够的目标主机来满足所指定的最小值,Nmap可能会采用比所指定的值小的组.这两个参数虽然很少使用,但都用于保持组的大小在一个指定的范围之内. 这些选项的主要用途是说明一个最小组的大小,使得整个扫描更加快速.通常选择256来扫描C类网段.对于端口数较多的扫描,超出该值没有意义.对于端口数较少的扫描,2048或更大的组大小是有帮助的. --min-parallelism ; --max-parallelism (调整探测报文的并行度) 这些选项控制用于主机组的探测报文数量,可用于端口扫描和主机发现.默认状态下,Nmap基于网络性能计算一个理想的并行度,这个值经常改变.如果报文被丢弃,Nmap降低速度,探测报文数量减少.随着网络性能的改善,理想的探测报文数量会缓慢增加.这些选项确定这个变量的大小范围.默认状态下,当网络不可靠时,理想的并行度值可能为1,在好的条件下,可能会增长至几百. 最常见的应用是–min-parallelism值大于1,以加快性能不佳的主机或网络的扫描.这个选项具有风险,如果过高则影响准确度,同时也会降低Nmap基于网络条件动态控制并行度的能力.这个值设为10较为合适,这个值的调整往往作为最后的手段. --max-parallelism选项通常设为1,以防止Nmap在同一时间向主机发送多个探测报文,和选择--scan-delay同时使用非常有用,虽然这个选项本身的用途已经很好. `--min-rtt-timeout , --max-rtt-timeout , --initial-rtt-timeout (调整探测报文超时)` Nmap使用一个运行超时值来确定等待探测报文响应的时间,随后会放弃或重新发送探测报文.Nmap基于上一个探测报文的响应时间来计算超时值,如果网络延迟比较显著和不定,这个超时值会增加几秒.初始值的比较保守(高),而当Nmap扫描无响应的主机时,这个保守值会保持一段时间. 这些选项以毫秒为单位,采用小的–max-rtt-timeout值,使–initial-rtt-timeout值大于默认值可以明显减少扫描时间,特别是对不能ping通的扫描(-P0)以及具有严格过滤的网络.如果使用太小的值,使得很多探测报文超时从而重新发送,而此时可能响应消息正在发送,这使得整个扫描的时间会增加. 如果所有的主机都在本地网络,对于–max-rtt-timeout值来说,100毫秒比较合适.如果存在路由,首先使用ICMP ping工具ping主机,或使用其它报文工具如hpings,可以更好地穿透防火墙.查看大约10个包的最大往返时间,然后将–initial-rtt-timeout设成这个时间的2倍,–max-rtt-timeout可设成这个时间值的3倍或4倍.通常,不管ping的时间是多少,最大的rtt值不得小于100ms,不能超过1000ms. --min-rtt-timeout这个选项很少使用,当网络不可靠时,Nmap的默认值也显得过于强烈,这时这个选项可起作用.当网络看起来不可靠时,Nmap仅将超时时间降至最小值,这个情况是不正常的,需要向namp-dev邮件列表报告bug. --host-timeout (放弃低速目标主机) 由于性能较差或不可靠的网络硬件或软件、带宽限制、严格的防火墙等原因,一些主机需要很长的时间扫描.这些极少数的主机扫描往往占据了大部分的扫描时间.因此,最好的办法是减少时间消耗并且忽略这些主机,使用–host-timeout选项来说明等待的时间(毫秒).通常使用1800000来保证Nmap不会在单个主机上使用超过半小时的时间.需要注意的是,Nmap在这半小时中可以同时扫描其它主机,因此并不是完全放弃扫描.超时的主机被忽略,因此也没有针对该主机的端口表、操作系统检测或版本检测结果的输出. --scan-delay ; --max-scan-delay (调整探测报文的时间间隔) 这个选项用于Nmap控制针对一个主机发送探测报文的等待时间(毫秒),在带宽控制的情况下这个选项非常有效.Solaris主机在响应UDP扫描探测报文报文时,每秒只发送一个ICMP消息,因此Nmap发送的很多数探测报文是浪费的.–scan-delay设为1000,使Nmap低速运行.Nmap尝试检测带宽控制并相应地调整扫描的延迟,但并不影响明确说明何种速度工作最佳. --scan-delay的另一个用途是躲闭基于阈值的入侵检测和预防系统(IDS/IPS). -T (设置时间模板) 上述优化时间控制选项的功能很强大也很有效,但有些用户会被迷惑.此外,往往选择合适参数的时间超过了所需优化的扫描时间.因此,Nmap提供了一些简单的方法,使用6个时间模板,使用时采用-T选项及数字(0-5)或名称.模板名称有paranoid(0)、sneaky(1)、polite(2)、normal(3)、aggressive(4)和insane(5).前两种模式用于IDS躲避,Polite模式降低了扫描速度以使用更少的带宽和目标主机资源.默认模式为Normal,因此-T3实际上是未做任何优化.Aggressive模式假设用户具有合适及可靠的网络从而加速扫描.Insane模式假设用户具有特别快的网络或者愿意为获得速度而牺牲准确性. 用户可以根据自己的需要选择不同的模板,由Nmap负责选择实际的时间值.模板也会针对其它的优化控制选项进行速度微调.例如,-T4针对TCP端口禁止动态扫描延迟超过10ms,-T5对应的值为5ms.模板可以和优化调整控制选项组合使用,但模板必须首先指定,否则模板的标准值会覆盖用户指定的值.建议在扫描可靠的网络时使用-T4,即使在自己要增加优化控制选项时也使用(在命令行的开始),从而从这些额外的较小的优化中获益. 如果用于有足够的带宽或以太网连接,仍然建议使用-T4选项.有些用户喜欢-T5选项,但这个过于强烈.有时用户考虑到避免使主机崩溃或者希望更礼貌一些会采用-T2选项.他们并没意识到-T Polite选项是如何的慢,这种模式的扫描比默认方式实际上要多花10倍的时间.默认时间选项(-T3)很少有主机崩溃和带宽问题,比较适合于谨慎的用户.不进行版本检测比进行时间调整能更有效地解决这些问题. 虽然-T0和-T1选项可能有助于避免IDS告警,但在进行上千个主机或端口扫描时,会显著增加时间.对于这种长时间的扫描,宁可设定确切的时间值,而不要去依赖封装的-T0和-T1选项. T0选项的主要影响是对于连续扫描,在一个时间只能扫描一个端口,每个探测报文的发送间隔为5分钟.T1和T2选项比较类似,探测报文间隔分别为15秒和0.4秒.T3是Nmap的默认选项,包含了并行扫描.T4选项与–max-rtt-timeout 1250 –initial-rtt-timeout 500等价,最大TCP扫描延迟为10ms.T5等价于–max-rtt-timeout 300 –min-rtt-timeout 50 –initial-rtt-timeout 250 –host-timeout 900000,最大TCP扫描延迟为5ms. 五、防火墙/IDS逃逸 选项 解释 -f 报文分段 –mtu 指定偏移大小 -D IP欺骗 -sI 源地址欺骗 –source-port 源端口欺骗 –data-lenth 指定发包长度 –randomize-hosts 目标主机随机排序 –spoof-mac MAC地址欺骗 报文分段-f 会将TCP头分段在几个保重，是的包过滤器、IDS以及其他工具的检测更加困难。Nmap在IP头后会将包分为8个字节或更小，在使用-f时需要小心，处置不当时会出项某些错误。一些主句会禁止响应ICMP请求，这种情况就可以使用报文分段的方法来逃避防火墙的规则 指定偏移大小--mtu MTU（maximum transmission unit 最大传输单元），此值设定TCP/IP协议传输数据报时的最大传输单元。使用指定的MTU可以达到逃逸防火墙/IDS的目的，偏移量必须是8的倍数。 例如：nmap –mtu 16 192.168.123.12 IP欺骗使用-D选项对目标进行扫描的时候会让目标主机误认为是在利用幼儿进行扫描，而不是一个真实的扫描，这样可以躲避防火墙和某些规则的限制，也可以达到隐藏自身的目的 可以使用英文的逗号对每个诱饵主机进行分割，当人也要领会主机管理员的想法，他可能认为该扫描使用的是诱饵主机进行扫描的，而不是真实的扫描地址，一次会忽略这次扫描，反而可以使用自己的真实IP去进行扫描，会达到欺骗目标主机管理员的目的，这样做时最好与诱饵主机交叉使用。 IP欺骗语法：nmap -D decoy1,decoy2,decoy3|RND:number 目标主机 例如： nmap –D RND:11 192.168.123.12(随机生成11个ip地址) Nmap –D 192.168.0.1,192.168.0.2,192.168.0.3 192.168.123.12(指定几个ip) 需要注意的是，诱饵主机必须处于工作状态，否则会倒是目标主机的SYN洪水攻击 源地址欺骗-sI使用方法同空闲扫描 源端口欺骗--source-port选项，也可以用-g选项指定端口号，nmap就可以从这些端口中发送数据，因为防火墙对服务器的设置会根据端口选择是否信任数据流，管理员可能会认为这些端口不会有攻击发生。例如：nmap –source-port 53 192.168.123.12 指定发包长度--data-length通常情况下TCP包是40字节，ICMP echo有28字节，所以在原来的报文基础上附加随机书籍达到规避防火墙的效果例如：nmap --data-length 30 192.168.123.12 目标主机随机排序使用--randomize-hosts选项可以对目标主机的顺序进行随机排序，最多可达8096个主机。单方面使用这个选项对防火墙/IDS逃逸的效果不大，配合时间选项会有更好的效果 MAC地址欺骗--spoof-mac选项，冒失的指定一个MAC反而会引起管理员换衣。使用—spoof-mac选项可以使用的参数包括0、MAC address、vendor name。0表示随机生成一个MAC地址，MAC address表示用户手动指定一个MAC地址，vendor name表示从指定厂商生成一个MAC地址 六、信息收集 脚本 解释 –script ip-geolocation-* IP信息查询 whois whois查询 http-email-harvest 收集email信息 Hostmap-ip2hosts IP反查 dns-brute Dns信息收集 menbase-http-info 检索系统信息 smb-security-mode.nse 后台打印机服务漏洞 smb-check-vulns.nse 系统漏洞扫描 http-stored-xss.nse 扫描问漏洞 snmp-win32-services 通过snmp列举Windows服务/账户 dns-brute 美剧DNS服务器的主机名 http-headers/http-sitemap-generator http信息收集 ssl-enum-cipher 枚举ssl秘钥 ssh-hostkey Ssh服务秘钥信息探测 nmap --script ip-geolocation-* www.0day.co nmap --script whois www.oday.co nmap --script http-email-harvest www.0day.co nmap –sn --script hostmap-ip2hosts www.0day.co Ip反查可以将所有绑定带该IP的域名显示出来 nmap --script dns-brute 该脚本默认线程是5，可以设置nmap --script dns-brute dns-brute.threads=10 www.xxx.com。如果查询多个域名也可以指定一个列表：nmap --script dns-brute dns-brute.threads=10,dns-brute.hostlist www.baidu.com 使用命令“nmap –p 445 目标 --script membase-http-info”即可进行检索系统信息 使用命令“nmap --script smb-security-mode.nse –p 445 目标”即可检查打印机漏洞（需要手动指定端口） 使用命令“nmap --script smb-check-vulns.nse –p 445”通过调用smb-check-vulns.nse脚本可以对SMB漏洞进行扫描，即使不调用大型的扫描工具也可以轻易地完成这个过程。还可以使用U:或者T:进行配合使用命令“nmap –p80 --script http-stored-xss.nse 目标”即可扫描目标web漏洞。http-stored-xss.nse脚本可以帮助我们发现网站的XSS（跨站脚本攻击）漏洞，http-sql-injection脚本可以帮助我们发现事情了注入漏洞 使用命令“nmap –sU –p 161 --script=snmp-win32-services 目标”即可通过snmp服务队咪表系统的服务会账户进行枚举. snmp-win32-services脚本可以轻易地通过是你们跑服务获取目标正在运行着的服务，通过snmp-win32-users脚本则可以看到目标所有的账户 使用命令“nmap --script dns-brute --script-agre dns-brute.domain-baidu.com”即可发起对baidu.com子域名的枚举 使用命令“nmap –p 80 --script=http-headers 目标地址”即可对目标地址进行http头信息分析。通过命令“nmap –p 80 --script=http-sitemap-generator 目标地址”即可爬行web目录结构 SSL（安全套接层）及其继任者传输层安全（TLS）是为网络通信提供安全及数据完整性的一种安全协议。TLS与ssl在传输层对网络连接进行加密 SSL协议使用秘钥对书籍进行加密，通过发送SSLv3/TLS可以判断目标服务器支持的秘钥算法和压缩算法 使用命令“nmap –p 443 --script=ssl-enum-ciphers 目标”即可枚举SSL秘钥 SSH是英文Secure Shell的简写。通过SSH，可以把所有传输的数据进行加密，这样“中间人”这种加密方式就不可能实现了，而且也能防止DNS欺骗和IP欺骗。使用SSH，还有一个额外的好处就是传输的数据是经过压缩的，所以可以加快传输速度。SSH有很多功能，他即可以代替Telnet，有可以为FTP、POP，甚至PPP提供一个安全的“通道”。SSH惬意是通过秘钥的方式吧所有的传输的数据进行加密从而保证数据的安全，在nmap脚本中，ssh-hostkey可以查看SSH服务的秘钥信息 使用命令：“nmap –p 22 --script ssh-hostkey --script-args ssh_hostkey=full 127.0.0.1” 七、数据库渗透测试 脚本 解释 mysql-databases MySQL列举数据库 mysql-variables 列举MySQL变量 mysql-empty-password 检查MySQL密码 mysql-brute 审计MySQL密码 mysql-audit 审计MySQL安全配置 oracle-brute 审计oracle密码 ms-sql-brute 审计msSQL密码 ms-sql-empty-password 检查msSQL空密码 ma-sql-tables 读取msSQL数据 ma-sql-xp-cmdshell msSQL执行系统命令 pgsql-brute 审计pgsql密码 MySQL列举数据库使用命令“nmap –p3306 --script mysql-databases --script-args mysqluser=root,mysqlpass 目标”进行MySQL数据库的列举工作 列举MySQL变量使用命令“nmap –p3306 --script=mysql-variables 目标”即可列举目标MySQL变量 检查MySQL密码使用命令“nmap –p3306 --script=mysql-empt-password 目标”即可查看MySQL服务的密码。 该脚本用于检查MySQL是否是空密码，或者密码是否为root，或允许匿名登录，是一个MySQL安全性检车的脚本。 审计MySQL密码使用命令“nmap --script=mysql-brute 192.168.1.2”即可审计目标MySQL密码 该脚本用于MySQL弱口令，默认nmap会扫描全部的端口用于查找MySQL端口，但是我们可以使用-p选项指定一个端口，也可自定义账号密码字典 例如：nmap –p3306 --script=mysql-brute userdb=/root/passdb.txt passdb=/root/passdb.txt 192.168.1.2 审计MySQL安全配置使用命令“nmap –p3306--script mysql-audit --script-args “mysql-audit.username=’root’,\mysql-audit.password=’ ‘,mysql-audit.filename=’nselib/data/mysql-cis.audit’” mysql-audit脚本用于对MySQL安全配置进行随机，-p参数指定目标端口， 审计oracle密码使用命令“nmap --script oracle-brute –p1521 --script-args oracle-brute.sid-test 目标” oracle-brute脚本用于暴力破解oracle密码，。若西药自定义的账号密码字典进行暴力破解，需要userdb选项指定账号字典，passdb指定密码字典 例如：nmap --script oracle-brute –p1521 --script-args oracle-brute.sid=test --script-args userdb=/tmp/username.txt,passdb=/tmp/passwords.txt 192.168.12.123 审计msSQL密码使用命令“nmap –p 1443 ms-sql-brute --script-args userdb=name.txt,passdb=pass.txt 目标”即可审计密码 检查msSQL空密码使用命令“nmap –p 1433 --script ms-sql-empty-password 192.168.123.12”使用ms-sql-empty-password脚本可以检查msSQL空密码 读取msSQL数据使用命令“nmap –p 1433 --script ms-sql-tables --script-args mssql.username-sa,mssql.password=sa 目标”可以读取MySQL中的数据 msSQL执行系统命令使用命令“nmap –p 1433 --script ms-sql-xp-xmd-shell --script-args mssql.username=sa,mssql.password=sa,ms-sql-xp-cmdshell.cmd=”ipconfig” 192.168.12.1”即可借助msSQL执行系统命令。 审计pgsql密码使用命令“nmap –p 5432 --script pgsql-brute 目标”即可审计pgsql密码，用于检查弱口令等 八、渗透测试 脚本 解释 http-brute 审计HTTP身份验证 ftp-btute 审计FTP服务器 http-wordpress-brute 审计WordPress程序 http-joomla-brute 审计Joomla程序 pop3-brute 审计邮件服务器 smb-brute.nse 审计SMB口令 vnc-brute 审计VNC服务器 smtp-brute 审计SMTP服务器 stuxnet-detsct 检测Stuxnet蠕虫 snmp-netstatsnmp-processessnmp-win32-servicessnmp-brute SNMP服务安全审计 审计HTTP身份验证使用命令“nmap --script http-brute –p 80 目标”即可审计HTTP身份。 http-brute脚本可以对HTTP中的username和password进行简单的暴力破解， 审计FTP服务器使用命令“nmap --script ftp-brute –p 21 目标” ftp-brute脚本可以暴力破解FTP账号密码，可以指定字典例如：nmap --script ftp-brute –scropt –args userdb=user.txt,passdb=pass.txt –p 21 192.168.123.12 许多FTP服务器允许匿名登录，所以也可以使用ftp-anon脚本检测目标主机FTP服务是否允许匿名登录 审计WordPress程序使用 命令“nmap –p80 --script http-wordpress-brute 目标”http-wordpress-brute脚本可以很好地针对WordPress程序进行审计，可以破解账号，可以指定字典，可以设置线程（http-wordpress-brute.threads=10） 审计Joomla程序使用命令“nmap –p80 --script http-joomla-brute 目标”即可针对Joomla程序进行账号密码的暴力破解，可以指定字典，可以指定线程(http-joomla-brute.threads=5)默认为3 审计邮件服务器使用命令“nmap –p110 --script=pop3-brute 目标”可以指定字典 审计SMB口令使用命令“nmap --script smb-brute.nse –p445 目标”可以指定字典 审计VNC服务器使用命令“nmap --script vnc-brute –p 5900 目标”可以指定字典 审计SMTP服务器使用命令“nmap –p 25 --script smltp-brute 目标” smtp-enum-users可以枚举远程系统的所有用户 检测Stuxnet蠕虫使用命令“nmap --script stuxnet –detect –p 445 目标”即可检测Stuxnet蠕虫 SNMP安全审计snmp-netstat脚本可以识别并自动添加新的目标进行扫描，通过该脚本可以查询SNMP协议，可以获取目标主机的网络状态 使用命令“nmap –sU –p 161 --script=snmp-netstat 目标” snmp-processes通过是你们跑服务协议枚举运行的系统进程 snmp-win32-services脚本可以获得Windows服务器的服务 snmp-brute脚本可以对目标服务器的snmp服务进行口令审计 九、nmap技巧 选项 解释 –send-eth 发送以太网数据包 –send-ip 网络层发送 –privileged 嘉定拥有所有权 –interactive 在交互模式中启动 -V 查看nmap版本号 -d 设置调试级别1-9 –packet-trace 跟踪发送接收的报文 –iflist 列举接口和路由 -e 制动网络接口 -oG 继续终端扫描 firewalk 探测防火墙 vmauthd-brute VMware认证破解 --resume选项可以继续中断扫描，但必须配合-oN选项或者-oG选项-oG将扫描结果保存TXT， 使用命令“nmap --script=firewalk -traceroute 目标”对目标服务器防火墙规则进行探测 vmauthd-brute脚本可以破解安装虚拟机系统的用户名和密码 nmap保存和输出-oN：标准保存：保存的结果与nmap即使打印的结果是相同的 -oX：XML保存： -oS：133t保存： -oG：grep保存 -oA；保存到所有格式 --append-output：补充保存文件 -oX转换XML保存 -oX忽略XML声明的XSL样式表]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>nmap</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[My First Blog]]></title>
    <url>%2F2018%2F12%2F04%2FBlog%2F</url>
    <content type="text"><![CDATA[博客搭建过程中的问题博客的搭建的过程主要参考了掘金博文 从开始到搭建成功大概历时两个小时 开始并没有完全按照掘金的方法来做而是参考的知乎吴润的文章，由于两篇文章混淆导致在GitHub建立项目时总是出错而反复删除项目，创建项目时只要按照掘金的博文就不会出错。 除了文章中我遇到以下三点问题： 执行 `npm install hexo-cli -g npm install hexo-deployer-git –save` 命令时总提示command not found 背景：安装git时一路点击next，cmd可执行 解决办法：参考https://jingyan.baidu.com/article/90895e0fb3495f64ed6b0b50.html重新安装git 执行hexo g是git提示只有三个commands可执行分别为help,init,version解决办法，此问题随问题1 一同解决 本地主题没有部署到GitHub原因：hexo下_config.yml文件中要把repository改成repo]]></content>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F12%2F04%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
